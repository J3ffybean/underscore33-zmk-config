/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// This key-map file WILL NOT WORK FOR YOU, you will need to modify it. I really do not recommend adapting to it.
// This key-map file is set-up to be the split space layout.
// I strongly urge you to customise your firmware to suit your usage.
// Please feel free to join the ZMK server at https://discord.gg/TdRMQaTYdF for help.

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {

behaviors {
      hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping_term_ms = <300>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    combos {
    compatible = "zmk,combos";
    combo_del {
        timeout-ms = <50>;
        key-positions = <18 19>;
        bindings = <&kp DEL>;
        layers = <1>;
    };
    combo_bspc {
        timeout-ms = <50>;
        key-positions = <8 9>;
        bindings = <&kp BKSP>;
        layers = <0 1>;
    };
    combo_tab {
        timeout-ms = <50>;
        key-positions = <0 1>;
        bindings = <&kp TAB>;
        layers = <0>;

    };
    combo_esc {
        timeout-ms = <50>;
        key-positions = <1 2>;
        bindings = <&kp ESC>;
        layers = <0>;

    };
};

};
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |  Y  |  U   |  I  |  O  |  P  |
// | A/LGUI | S/LALT | D/LCTRL |  F |  G/LT1   |  H/LT2  |  J  | K/RCTRL | L/RALT | '/RGUI |
// |  Z  |  X  |  C  |  V  |  B   |  N  |  M   |  ,  |  .  |  /  |
//             | ESC | TAB |  SPC | BSPC/RSHFT | ; | ENT |
                        bindings = <
   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P
   &hm LGUI A &hm LALT S &hm LCTRL D &kp F &lt 1 G   &lt 2 H &kp J  &hm RCTRL K  &hm LALT L  &hm RGUI SQT
   &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH
   &kp ESC &lt 2 TAB &kp SPACE &hm BSPC RSHFT &kp SEMI &kp ENTER
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// |  +  |  1  |  2  |  3  |  (  |  )  |  CAPS  |  UP  |    |    |
// |  -  |  4  |  5  |  6  |  =  |    |    |  LEFT  |  DOWN  |  RIGHT  |
// |  *  |  7  |  8  |  9  |  .  |    |    |  CTRL  |  GUI  |  ALT  |
//             | / | 0 |  ENT | BSPC | DEL |  |
                        bindings = <
   &kp KP_PLUS    &kp N1    &kp N2    &kp N3      &kp LBKT      &kp RBKT    &kp CAPS    &kp UP    &trans     &trans
   &kp KP_MINUS  &kp N4    &kp N5  &kp N6  &kp KP_EQUAL   &trans &trans  &kp LEFT  &kp DOWN  &kp RIGHT
   &kp KP_MULTIPLY  &kp N7  &kp N8  &kp N9    &kp DOT   &trans  &trans  &kp RCTRL &kp RGUI    &kp RALT
   &kp KP_DIVIDE    &kp N0    &trans    &kp BSPC      &kp DEL      &trans
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// | () | [] | {} | "" | ~ |  | FN1 | FN2 | FN3 | FN4 |
// | ! | @ | # | $ | PIPE | HOLD L2 | FN5 | FN6 | FN7 | FN8 |
// | % | ^ | & | \ | _ |      | FN9 | FN10 | FN11 | FN12 |
//             | btClear | BT1 | BT2 | BT3 | BT4 | BT5 |
                        bindings = <
   &bt BT_CLR   &reset      &trans  &trans &kp TILDE     &trans    &kp F1  &kp F2    &kp F3 &kp F4
   &kp EXCL &kp AT &kp HASH  &kp DOLLAR &kp PIPE     &trans &kp F5  &kp F6  &kp F7 &kp F8
   &kp PRCNT &kp CARET &kp AMPERSAND  &kp BACKSLASH &kp UNDERSCORE     &trans    &kp F9    &kp F10    &kp F11    &kp F12
   &bt BT_CLR   &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_SEL 5
                        >;
                };


        };
};
